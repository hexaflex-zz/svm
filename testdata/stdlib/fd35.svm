:fd35 {
    const Manufacturer = 16#fffe
    const Serial       = 16#0004

    ;------------------------------------------------------------------------------
    ; Interrupt operation Ids
    ;------------------------------------------------------------------------------
    const ReadState   = 0
    const ReadSector  = 1
    const WriteSector = 2

    ;------------------------------------------------------------------------------
    ; Device States
    ;------------------------------------------------------------------------------
    const StateNoMedia  = 0
    const StateReady    = 1
    const StateReadyWP  = 2
    const StateBusy     = 3

    ;------------------------------------------------------------------------------
    ; Error Codes
    ;------------------------------------------------------------------------------
    const ErrorNone        = 0
    const ErrorBusy        = 1
    const ErrorNoMedia     = 2
    const ErrorProtected   = 3
    const ErrorEject       = 4
    const ErrorBadSector   = 5
    const ErrorBroken      = 6

    ;------------------------------------------------------------------------------
    ; Miscellaneous constants
    ;------------------------------------------------------------------------------
    const TrackCount      = 80
    const SectorsPerTrack = 18
    const SectorCount     = TrackCount * SectorsPerTrack
    const SectorByteSize  = 1024

    ;------------------------------------------------------------------------------
    ; SyncReadSector reads data from the given sector to the specified address and waits for completion.
    ;------------------------------------------------------------------------------
    macro SyncReadSector device, address, sector
        mov r0, fd35.ReadSector
        mov r1, address
        mov r2, sector
        int device
        fd35.waitReady device
    endmacro

    ;------------------------------------------------------------------------------
    ; SyncWriteSector writes data from the specified address to the given sector and waits for completion.
    ;------------------------------------------------------------------------------
    macro SyncWriteSector device, sector, address
        mov r0, fd35.WriteSector
        mov r1, sector
        mov r2, address
        int device
        fd35.waitReady device
    endmacro

    ;------------------------------------------------------------------------------
    ; waitReady does a busy loop while the device state is StateBusy.
    ;------------------------------------------------------------------------------
    macro waitReady device
    {
    :loop
        mov r0, fd35.ReadState
        int device
        ceq r0, fd35.StateBusy
        jnz loop
    }
    endmacro
}