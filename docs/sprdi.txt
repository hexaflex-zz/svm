===============================================================================
 SPRDI (Sprite Display Mk I)
===============================================================================

 Manufacturer:  0xFFFE
 Serialno.:     0x0002
 Document rev.: 8

 This device serves as a display for simple tiled graphics with a fixed
 resolution of 256 x 240 pixels. It manages internal foreground- and background
 sprite buffers, along with user configurable color palettes.


===============================================================================
 Interrupts
===============================================================================

 The device is controlled through interrupts. Arguments for these operations are
 provided through registers R0, R1 and R2.

 R0 is set to the id of the operation one wishes to perform. R1, R2 abd R3 are
 set to any required arguments. Once complete, each of the three registers may
 be overwritten with any return values. A listing of supported operations is
 provided below.


  0x01 SetBackgroundPalette

       Copies a color palette from system memory into the device's background
       palette buffer. Refer to the Color Palette section below for details on
       what a palette looks like.

       R1: Address where the new color palette is stored in system memory.

  0x02 SetForegroundPalette

       Copies a color palette from system memory into the device's foreground
       palette buffer. Refer to the Color Palette section below for details on
       what a palette looks like.

       R1: Address where the new color palette is stored in system memory.

  0x03 SetBackgroundSprites

       Copies one or more sprites into the background sprite buffer. This is
       meant for the actual sprite pixel data. Refer to the Sprites section for
       details on how these work.

       R1: Source address from where to read sprite data.
       R2: Destination sprite index where copying begins.
       R3: Number of sprites to copy.

  0x04 SetForegroundSprites

       Copies one or more sprites into the foreground sprite buffer. This is
       meant for the actual sprite pixel data. Refer to the Sprites sections
       for details on how these work.

       R1: Source address from where to read sprite data.
       R2: Destination sprite index where copying begins.
       R3: Number of sprites to copy.

  0x05 DrawBackground

       Copies one or more background sprite descriptors to the display.
       This causes the sprites being described to be drawn to an internal
       background pixel buffer, which is actually displayed once the Swap
       operation is used.

       R1: Source address from where to read sprite data.
       R2: Destination tile index where copying begins.
           The index can be computed from x/y tile coordinates as follows:

           index = y * HORIZONTAL_TILE_COUNT + x

           where HORIZONTAL_TILE_COUNT = SCREEN_WIDTH / SPRITE_WIDTH
                 HORIZONTAL_TILE_COUNT = 256 / 8
                 HORIZONTAL_TILE_COUNT = 32

       R3: Number of sprites to copy.

  0x06 DrawForeground

       Copies one or more foreground sprite descriptors to the display.
       This causes the sprites being described to be drawn to an internal
       foreground pixel buffer, which is actually displayed once the Swap
       operation is used.

       R1: Source address from where to read sprite data.
       R2: Number of sprites to copy.

  0x07 ClearBackground

       Clears the background sprite contents.

  0x08 ClearForeground

       Clears the foreground sprite contents.

  0x09 Swap

       Copies the contents of the sprite buffers to the actual display.


===============================================================================
 Color Palette
===============================================================================

 The device defines two builtin color palettes. One for background sprites and
 one for the foreground sprites.

 Each pixel in a sprite is defined as a 4 bit index into this palette.
 The palette itself contains 16 color entries. Each color has a 16-bit RGB565
 format. The first entry in each palette is treated as a transparent color,
 regardless of its value.


===============================================================================
 Sprites
===============================================================================

 The system defines two distinct sprite buffers. One for foreground sprites and
 one for background sprites. Each buffer holds up to 256 unique sprites.

 Each sprite defines an 8x8 pixel area at 4 bits per pixel. Making a single
 sprite 32 bytes long. Each pixel is an index into the foreground- or background
 color palettes respectively. Pixel data is packed into bytes in Big Endian
 format.


===============================================================================
 Background sprites
===============================================================================

 Unlike the foreground, where sprites can be positioned anywhere on screen,
 background sprites are locked to a 32x30 tile grid.

 Each sprite in the background is defined as a 8-bit tile descriptor.
 The layout of a tile descriptor is as follows:
 
   aaaaaaaa

   a: 8 bit sprite index referring to the background sprite buffer which holds
      the actual pixel data for each sprite.


===============================================================================
 Foreground sprites
===============================================================================

 Foreground sprites can be drawn anywhere on screen and do not adhere to a tile
 grid like the background does. Each sprite is defined as a 24-bit sprite
 descriptor. The layout of a sprite descriptor is as follows:
 
   aaaaaaaa bbbbbbbb cccccccc

   a: 8 bit sprite index referring to the foreground sprite buffer which holds
      the actual pixel data for each sprite.
   b: 8 bit screen position on X axis.
   c: 8 bit screen position on Y axis.
